server.port = 8088

# DB connect
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Hibernate ??
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# /actuator
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.prometheus.enabled=true
management.endpoints.web.base-path=/actuator
management.prometheus.metrics.export.enabled=true

# Eureka ??
spring.application.name=search-service
eureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
eureka.client.register-with-eureka=${EUREKA_CLIENT_REGISTER_WITH_EUREKA}
eureka.client.fetch-registry=${EUREKA_CLIENT_FETCH_REGISTRY}
eureka.instance.prefer-ip-address=${EUREKA_INSTANCE_PREFER_IP_ADDRESS}

spring.elasticsearch.uris=${SPRING_ELASTICSEARCH_URIS}
spring.elasticsearch.username=${SPRING_ELASTICSEARCH_USERNAME}

spring.data.redis.sentinel.master=${SPRING_DATA_REDIS_SENTINEL_MASTER}
spring.data.redis.sentinel.nodes=${SPRING_DATA_REDIS_SENTINEL_NODES}
spring.data.redis.sentinel.password=${SPRING_DATA_REDIS_SENTINEL_PASSWORD}
spring.data.redis.password=${SPRING_DATA_REDIS_PASSWORD}

spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.consumer.group-id=group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer